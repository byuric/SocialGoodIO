{
  "author": {
    "name": "PayPal",
    "email": "DL-PP-Platform-NodeJs-SDK@ebay.com",
    "url": "https://developer.paypal.com/"
  },
  "name": "paypal-rest-sdk",
  "description": "SDK for PayPal REST APIs",
  "version": "0.6.4",
  "homepage": "https://github.com/paypal/rest-api-sdk-nodejs",
  "keywords": [
    "paypal",
    "rest",
    "api",
    "sdk"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/paypal/rest-api-sdk-nodejs.git"
  },
  "bugs": {
    "url": "https://github.com/paypal/rest-api-sdk-nodejs/issues",
    "email": "DL-PP-Platform-NodeJs-SDK@ebay.com"
  },
  "licenses": [
    {
      "url": "https://github.com/paypal/rest-api-sdk-nodejs/blob/master/LICENSE.txt"
    }
  ],
  "engines": {
    "node": ">= v0.6.0"
  },
  "main": "./index.js",
  "dependencies": {
    "node-uuid": "*"
  },
  "devDependencies": {
    "chai": "*",
    "mocha": "*",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-simple-mocha": "~0.3.2",
    "mocha-lcov-reporter": "0.0.1",
    "blanket": "~1.1.5",
    "coveralls": "~2.0.16"
  },
  "scripts": {
    "test": "mocha -t 60000"
  },
  "readmeFilename": "README.md",
  "readme": "# REST API SDK for Node.js [![NPM version](https://badge.fury.io/js/paypal-rest-sdk.png)](http://badge.fury.io/js/paypal-rest-sdk) [![Build Status](https://travis-ci.org/paypal/rest-api-sdk-nodejs.png?branch=master)](https://travis-ci.org/paypal/rest-api-sdk-nodejs)\n\nRepository for PayPal's Node.js SDK (node.js version >=0.6.x) and Node.js samples for REST API. Refer [Node.js Sample Reference App ](https://github.com/paypal/rest-api-sample-app-nodejs) for a sample web app implementing the REST APIs.\n\n## Usage\nTo write an app using the SDK\n\n  * Register for a developer account and get your client_id and secret at [PayPal Developer Portal](https://developer.paypal.com).\n  * Add dependency 'paypal-rest-sdk' in your package.json file.\n  * Require 'paypal-rest-sdk' in your file\n\n    ```js\n    var paypal_sdk = require('paypal-rest-sdk');\n    ```\n  * Create config options, with required parameters (host, port, client_id, secret).\n\n    ```js\n    paypal_sdk.configure({\n      'host': 'api.sandbox.paypal.com',\n      'port': '',\n      'client_id': 'EBWKjlELKMYqRNQ6sYvFo64FtaRLRR5BdHEESmha49TM',\n      'client_secret': 'EO422dn3gQLgDbuwqTjzrFgFtaRLRR5BdHEESmha49TM'\n    });\n    ```\n  * Invoke the rest api (eg: store a credit card) with required parameters (eg: data, config_options, callback).\n\n    ```js\n    var card_data = {\n      \"type\": \"visa\",\n      \"number\": \"4417119669820331\",\n      \"expire_month\": \"11\",\n      \"expire_year\": \"2018\",\n      \"cvv2\": \"123\",\n      \"first_name\": \"Joe\",\n      \"last_name\": \"Shopper\"\n    };\n\n    paypal_sdk.credit_card.create(card_data, function(error, credit_card){\n      if (error) {\n        console.log(error);\n        throw error;\n      } else {\n        console.log(\"Create Credit-Card Response\");\n        console.log(credit_card);\n      }\n    })\n    ```\n\n  * To use OpenID Connect\n\n    ```js\n    // OpenID configuration\n    paypal_sdk.configure({\n      'openid_client_id': 'CLIENT_ID',\n      'openid_client_secret': 'CLIENT_SECRET',\n      'openid_redirect_uri': 'http://example.com' });\n\n    // Authorize url\n    paypal_sdk.openid_connect.authorize_url({'scope': 'openid profile'});\n\n    // Get tokeninfo with Authorize code\n    paypal_sdk.openid_connect.tokeninfo.create(\"Replace with authorize code\", function(error, tokeninfo){\n      console.log(tokeninfo);\n    });\n\n    // Get tokeninfo with Refresh code\n    paypal_sdk.openid_connect.tokeninfo.refresh(\"Replace with refresh_token\", function(error, tokeninfo){\n      console.log(tokeninfo);\n    });\n\n    // Get userinfo with Access code\n    paypal_sdk.openid_connect.userinfo.get(\"Replace with access_code\", function(error, userinfo){\n      console.log(userinfo);\n    });\n\n    // Logout url\n    paypal_sdk.openid_connect.logout_url(\"Replace with tokeninfo.id_token\");\n    ```\n\n## Running Samples\nInstructions for running samples are located in the [sample directory] (https://github.com/Runnable/rest-api-sdk-nodejs/tree/master/samples). Try these samples in a live sandbox environment:\n\n<a href=\"https://runnable.com/paypal\" target=\"_blank\"><img src=\"https://runnable.com/external/styles/assets/runnablebtn.png\" style=\"width:67px;height:25px;\"></a>\n\n## Running Tests\nTo run the test suite first invoke the following command within the repo\n\nIf mocha is not installed\n```sh\nnpm install -g mocha\n```\nand then to install the development dependencies:\n```sh\nnpm install\n```\nthen run the tests:\n```sh\nmocha -t 15000 #(timeout is specified in milliseconds eg: 15000ms)\n```\n## Reference\n   [REST API Reference] (https://developer.paypal.com/webapps/developer/docs/api/)\n\n## Contribution\n   * If you would like to contribute, please fork the repo and send in a pull request.\n   * Please ensure you run grunt before sending in the pull request.\n\n",
  "_id": "paypal-rest-sdk@0.6.4",
  "_from": "paypal-rest-sdk@~0.6.4"
}
