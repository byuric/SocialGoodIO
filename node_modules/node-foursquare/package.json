{
  "name": "node-foursquare",
  "description": "Fault-tolerant Foursquare API v2 wrapper for Node JS.",
  "version": "0.2.0",
  "main": "index.js",
  "keywords": [
    "node-foursquare",
    "foursquare",
    "4sq"
  ],
  "tags": [
    "node-foursquare",
    "foursquare",
    "4sq"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/clintandrewhall/node-foursquare.git"
  },
  "bugs": {
    "url": "https://github.com/clintandrewhall/node-foursquare/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/clintandrewhall/node-foursquare/raw/master/LICENSE"
    }
  ],
  "dependencies": {
    "winston": "0.6.x"
  },
  "devDependencies": {
    "express": "2.5.x"
  },
  "engines": {
    "node": ">= 0.8.x"
  },
  "homepage": "https://github.com/clintandrewhall/node-foursquare",
  "author": {
    "name": "Clint Andrew Hall",
    "url": "http://www.clintandrewhall.com"
  },
  "directories": {
    "lib": "./lib",
    "doc": "./doc"
  },
  "scripts": {
    "test": "node test.js"
  },
  "readme": "node-foursquare\n==================\n\nFault-tolerant Foursquare API wrapper for Node JS.\n\n\nInstall\n-------\n\n    npm install node-foursquare\n\nVersion History\n---------------\n\n*  v0.0.1 - First release\n*  v0.0.2 - Bug Fixes and Downstream Merges\n*  v0.1.0 - Suggested Refactoring and latest endpoints from Foursquare (VERY NON-PASSIVE)\n    * Surround results with field name.\n    * Userless Access Tokens (for Venues.explore, etc).\n    * Ability to load single portions of the library, (e.g. only import Venues).\n    * Users - Leaderboard, Requests\n    * Venues - Categories, Explore\n*  v0.1.1 - Support for Foursquare API Version + Deprecation Warnings (via configuration).\n*  v0.1.2 - Added new mayorships endpoint, removed extraneous field from User.getBadges (non-passive).\n*  v0.1.3 - Added Updates endpoint, updated to log4js v0.3.x.\n*  v0.1.4 - Added Lists and Events endpoints.\n*  v0.2.0 - Overhaul\n    * Replaced log4js with winston.\n    * Added new endpoints, modules, methods.\n    * Refactored testing suite.\n\nUse\n---\n\nThe Foursquare module takes a configuration parameter containing logging and client keys. It also supports alternate\nFoursquare URLs if necessary, (but that is unlikely).\n\n    var config = {\n      'secrets' : {\n        'clientId' : 'CLIENT_ID',\n        'clientSecret' : 'CLIENT_SECRET',\n        'redirectUrl' : 'REDIRECT_URL'\n      }\n    }\n\n    var foursquare = require('node-foursquare')(config);\n\nOnce instantiated, you just need to set up endpoints on your own server that match your OAuth configuration\nin Foursquare.  Using Express, for example:\n\n    var app = express.createServer();\n\n    app.get('/login', function(req, res) {\n      res.writeHead(303, { 'location': Foursquare.getAuthClientRedirectUrl() });\n      res.end();\n    });\n\n\n    app.get('/callback', function (req, res) {\n      Foursquare.getAccessToken({\n        code: req.query.code\n      }, function (error, accessToken) {\n        if(error) {\n          res.send('An error was thrown: ' + error.message);\n        }\n        else {\n          // Save the accessToken and redirect.\n        }\n      });\n    });\n\nFoursquare API Version and Deprecation Warnings\n-----------------------------------------------\n\nFoursquare allows consumers to specify a 'version' of their API to invoke, based on the date that version became active.\nFor example, passing a version string of '20110101' uses the API as of Jan 1, 2011.  By default, this library will use\na version of today's date.\n\nTo enable a different version of the API, add the following to configuration.\n\n    var config = {\n      ...\n      'foursquare' : {\n        ...\n        'version' : '20110101',\n        ...\n      }\n      ...\n    }\n\nWhen using an older API, Foursquare will provide deprecation warnings, (if applicable). By default, this library will\nwrite these warnings to the log, which will only be visible if logging for 'node-foursquare' is turned on, (see\n'Logging', below).\n\nYou can configure this library to throw an error instead:\n\n    var config = {\n      ...\n      'foursquare' : {\n        ...\n        'warnings' : 'ERROR',\n        ...\n      }\n      ...\n    }\n\n\nLogging\n-------\n\nThis module uses winston to log events. By default, the logging level is set to 'none'.  If you  want to output logging \nmessages from the different modules of this library, you can add overrides to your configuration object.  For example, \nto log debug (and higher) messages in Venues and warnings in Core to the console:\n\n    var config = {\n      'winston' : {\n        'loggers': {\n           'core': {\n             'console': {\n               'level': 'warn'\n             }\n           },\n           'venues': {\n             'console': {\n               'level': 'debug'\n             }\n           }\n         }\n      ...\n    }\n\n    var foursquare = require('node-foursquare')(config);\n\nFor a list of existing logging points, refer to [config-default.js](https://github.com/clintandrewhall/node-foursquare/blob/master/lib/config-default.js).\n\nFor more information, see: https://github.com/flatiron/winston\n\nTesting\n-------\n\nTo test, you need to create a config.js file in the /test directory as follows:\n\n    module.exports = {\n      'secrets' : {\n        'clientId' : 'YOUR_CLIENT_ID',\n        'clientSecret' : 'YOUR_CLIENT_SECRET',\n        'redirectUrl' : 'http://localhost:3000/callback' // This should also be set in your OAuth profile.\n      }\n    };\n\nThen, simply invoke the test.js file with Node.JS:\n\n    node test.js\n\nIf you hit [http://localhost:3000](http://localhost:3000), you'll be redirected for an authentication token.\n\nIf you hit [http://localhost:3000/test](http://localhost:3000/test), you'll test the entire library with no\nauthentication, (and get appropriate errors for protected endpoints).\n\nTesting results will be logged to the console.\n\nAll tests use examples as suggested by the [Foursquare Endpoint Explorer](https://developer.foursquare.com/docs/explore.html).\n\nDocumentation\n-------------\n\nDetailed documentation is available in the /docs directory.\n\n(In the latest version of JSDoc 3, the file names are replaced with random identifiers. Not sure why, we'll see if they\ncan get that fixed soon.)\n\nNotes\n-----\n\nThis module is a read-only subset of the full Foursquare API, but further capability, (adding, posting, updating, etc),\nis forthcoming. Bugs and Pull Requests are, of course, accepted! :-)\n\nThis project is a refactoring and enhancement of: https://github.com/yikulju/Foursquare-on-node\n",
  "readmeFilename": "readme.md",
  "_id": "node-foursquare@0.2.0",
  "_from": "node-foursquare@~0.2.0"
}
