{
  "name": "github-api",
  "version": "0.7.0",
  "description": "A higher-level wrapper around the Github API.",
  "main": "github.js",
  "dependencies": {
    "xmlhttprequest": "*",
    "underscore": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/darvin/github.git"
  },
  "keywords": [
    "github",
    "api"
  ],
  "author": {
    "name": "Sergey Klimov",
    "email": "sergey.v.klimov@gmail.com",
    "url": "http://darvin.github.com/"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "aa8aa3c8cd5ce5240373d4fd1d06a7ab4af41a36",
  "bugs": {
    "url": "https://github.com/darvin/github/issues"
  },
  "browser": {
    "xmlhttprequest": false
  },
  "testling": {
    "files": "test/*_test.js",
    "browsers": [
      "iexplore/10.0",
      "iexplore/9.0",
      "chrome/6.0",
      "chrome/7.0",
      "chrome/8.0",
      "chrome/9.0",
      "chrome/10.0",
      "chrome/11.0",
      "chrome/12.0",
      "chrome/13.0",
      "chrome/14.0",
      "chrome/15.0",
      "chrome/16.0",
      "chrome/17.0",
      "chrome/18.0",
      "chrome/19.0",
      "chrome/20.0",
      "chrome/21.0",
      "chrome/22.0",
      "chrome/23.0",
      "chrome/24.0",
      "chrome/25.0",
      "firefox/3.0",
      "firefox/3.5",
      "firefox/3.6",
      "firefox/4.0",
      "firefox/5.0",
      "firefox/6.0",
      "firefox/7.0",
      "firefox/8.0",
      "firefox/9.0",
      "firefox/10.0",
      "firefox/11.0",
      "firefox/12.0",
      "firefox/13.0",
      "firefox/14.0",
      "firefox/15.0",
      "firefox/16.0",
      "firefox/17.0",
      "firefox/18.0",
      "firefox/19.0",
      "opera/10.0",
      "opera/10.5",
      "opera/11.0",
      "opera/11.5",
      "opera/11.6",
      "opera/12.0",
      "safari/4.0",
      "safari/5.0.5",
      "safari/5.1",
      "firefox/nightly",
      "opera/next",
      "chrome/canary",
      "iphone/6.0",
      "ipad/6.0",
      "safari/6.0",
      "android-browser/4.2"
    ],
    "harness": "mocha"
  },
  "readme": "[![browser support](https://ci.testling.com/darvin/github.png)](https://ci.testling.com/darvin/github)\n\n\n[![Build Status](https://travis-ci.org/darvin/github.png?branch=master)](https://travis-ci.org/darvin/github)\n\n# Github.js\n\nGithub.js provides a minimal higher-level wrapper around git's [plumbing commands](http://git-scm.com/book/en/Git-Internals-Plumbing-and-Porcelain), exposing an API for manipulating GitHub repositories on the file level. It is being developed in the context of [Prose](http://prose.io), a content editor for GitHub.\n\nThis repo is now officially maintained by [DevelopmentSeed](https://github.com/developmentseed), the people behind [Prose.io](http://prose.io).\n\n## Usage\n\nCreate a Github instance.\n\n```js\nvar github = new Github({\n  username: \"YOU_USER\",\n  password: \"YOUR_PASSWORD\",\n  auth: \"basic\"\n});\n```\n\nOr if you prefer OAuth, it looks like this:\n\n```js\nvar github = new Github({\n  token: \"OAUTH_TOKEN\"\n  auth: \"oauth\"\n});\n```\n\n## Repository API\n\n\n```js\nvar repo = github.getRepo(username, reponame);\n```\n\nShow repository information\n\n```js\nrepo.show(function(err, repo) {});\n```\n\nGet contents at a particular path.\n\n```js\nrepo.contents(\"path/to/dir\", function(err, contents) {});\n```\n\nFork repository. This operation runs asynchronously. You may want to poll for `repo.contents` until the forked repo is ready.\n\n```js\nrepo.fork(function(err) {});\n```\n\nCreate Pull Request.\n\n```js\nvar pull = {\n  title: message,\n  body: \"This pull request has been automatically generated by Prose.io.\",\n  base: \"gh-pages\",\n  head: \"michael\" + \":\" + \"prose-patch\",\n};\nrepo.createPullRequest(pull, function(err, pullRequest) {});\n```\n\n\nRetrieve all available branches (aka heads) of a repository.\n\n```js\nrepo.listBranches(function(err, branches) {});\n```\n\nStore contents at a certain path, where files that don't yet exist are created on the fly.\n\n```js\nrepo.write('master', 'path/to/file', 'YOUR_NEW_CONTENTS', 'YOUR_COMMIT_MESSAGE', function(err) {});\n```\n\nNot only can you can write files, you can of course read them.\n\n```js\nrepo.read('master', 'path/to/file', function(err, data) {});\n```\n\nMove a file from A to B.\n\n```js\nrepo.move('master', 'path/to/file', 'path/to/new_file', function(err) {});\n```\n\nRemove a file.\n\n```js\nrepo.remove('master', 'path/to/file', function(err) {});\n```\n\nExploring files of a repository is easy too by accessing the top level tree object.\n\n```js\nrepo.getTree('master', function(err, tree) {});\n```\n\nIf you want to access all blobs and trees recursively, you can add `?recursive=true`.\n\n```js\nrepo.getTree('master?recursive=true', function(err, tree) {});\n```\n\nGiven a filepath, retrieve the reference blob or tree sha.\n\n```js\nrepo.getSha('master', '/path/to/file', function(err, sha) {});\n```\n\nFor a given reference, get the corresponding commit sha.\n\n```js\nrepo.getRef('heads/master', function(err, sha) {});\n```\n\nCreate a new reference.\n\n```js\nvar refSpec = {\n  \"ref\": \"refs/heads/my-new-branch-name\",\n  \"sha\": \"827efc6d56897b048c772eb4087f854f46256132\"\n};\nrepo.createRef(refSpec, function(err) {});\n```\n\nDelete a reference.\n\n```js\nrepo.deleteRef('heads/gh-pages', function(err) {});\n```\n\n\n## User API\n\n\n```js\nvar user = github.getUser();\n```\n\nList all repositories of the authenticated user, including private repositories and repositories in which the user is a collaborator and not an owner.\n\n```js\nuser.repos(function(err, repos) {});\n```\n\nList organizations the autenticated user belongs to.\n\n```js\nuser.orgs(function(err, orgs) {});\n```\n\nList authenticated user's gists.\n\n```js\nuser.gists(username, function(err, gists) {});\n```\n\nShow user information for a particular username. Also works for organizations.\n\n```js\nuser.show(username, function(err, user) {});\n```\n\nList public repositories for a particular user.\n\n```js\nuser.userRepos(username, function(err, repos) {});\n```\n\nList repositories for a particular organization. Includes private repositories if you are authorized.\n\n```js\nuser.orgRepos(orgname, function(err, repos) {});\n```\n\nList all gists of a particular user. If username is ommitted gists of the current authenticated user are returned.\n\n```js\nuser.userGists(username, function(err, gists) {});\n```\n\n## Gist API\n\n```js\nvar gist = github.getGist(3165654);\n```\n\nRead the contents of a Gist.\n\n```js\ngist.read(function(err, gist) {\n\n});\n```\n\nUpdating the contents of a Git. Please consult the documentation on [GitHub](http://developer.github.com/v3/gists/). \n\n```js\nvar delta = {\n  \"description\": \"the description for this gist\",\n  \"files\": {\n    \"file1.txt\": {\n      \"content\": \"updated file contents\"\n    },\n    \"old_name.txt\": {\n      \"filename\": \"new_name.txt\",\n      \"content\": \"modified contents\"\n    },\n    \"new_file.txt\": {\n      \"content\": \"a new file\"\n    },\n    \"delete_this_file.txt\": null\n  }\n};\n\ngist.update(delta, function(err, gist) {\n  \n});\n```\n\n\n## Tests\n\nGithub.js is automaticallyâ„¢ tested by the users of [Prose](http://prose.io). Because of that, we decided to save some time by not maintaining a test suite. Yes, you heard right. :) However, you can still consider it stable since it is used in production.\n\n##Setup\n\nGithub.js has the following dependencies:\n\n- Underscore\n- Base64 (for basic auth). You can leave this if you are not using basic auth.\n\nInclude these before github.js :\n\n```\n<script src=\"lib/underscore-min.js\">\n<script src=\"lib/base64.js\">\n<script src=\"github.js\">\n```\n\n## Change Log\n\n\n### 0.7.X\n\nSwitched to a native `request` implementation (thanks @mattpass). Adds support for GitHub gists, forks and pull requests.\n\n### 0.6.X\n\nAdds support for organizations and fixes an encoding issue.\n\n### 0.5.X\n\nSmart caching of latest commit sha. \n\n### 0.4.X\n\nAdded support for [OAuth](http://developer.github.com/v3/oauth/).\n\n### 0.3.X\n\nSupport for Moving and removing files.\n\n### 0.2.X\n\nConsider commit messages.\n\n### 0.1.X\n\nInitial version.\n",
  "homepage": "https://github.com/darvin/github",
  "_id": "github-api@0.7.0",
  "_from": "github-api@~0.7.0"
}
